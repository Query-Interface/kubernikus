// +build !ignore_autogenerated

// This file was autogenerated by deepcopy-gen. Do not edit it manually!

package v1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Kluster) DeepCopyInto(out *Kluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Kluster.
func (in *Kluster) DeepCopy() *Kluster {
	if in == nil {
		return nil
	}
	out := new(Kluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Kluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KlusterList) DeepCopyInto(out *KlusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Kluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KlusterList.
func (in *KlusterList) DeepCopy() *KlusterList {
	if in == nil {
		return nil
	}
	out := new(KlusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KlusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAPCCloudProviderConfig) DeepCopyInto(out *SAPCCloudProviderConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAPCCloudProviderConfig.
func (in *SAPCCloudProviderConfig) DeepCopy() *SAPCCloudProviderConfig {
	if in == nil {
		return nil
	}
	out := new(SAPCCloudProviderConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SAPCCloudProviderConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAPCCloudProviderConfigList) DeepCopyInto(out *SAPCCloudProviderConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SAPCCloudProviderConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAPCCloudProviderConfigList.
func (in *SAPCCloudProviderConfigList) DeepCopy() *SAPCCloudProviderConfigList {
	if in == nil {
		return nil
	}
	out := new(SAPCCloudProviderConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SAPCCloudProviderConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAPCCloudProviderConfigSpec) DeepCopyInto(out *SAPCCloudProviderConfigSpec) {
	*out = *in
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = make([]SystemdNetworkSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Netdevs != nil {
		in, out := &in.Netdevs, &out.Netdevs
		*out = make([]SystemdNetDevSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAPCCloudProviderConfigSpec.
func (in *SAPCCloudProviderConfigSpec) DeepCopy() *SAPCCloudProviderConfigSpec {
	if in == nil {
		return nil
	}
	out := new(SAPCCloudProviderConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemdNetDevBond) DeepCopyInto(out *SystemdNetDevBond) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemdNetDevBond.
func (in *SystemdNetDevBond) DeepCopy() *SystemdNetDevBond {
	if in == nil {
		return nil
	}
	out := new(SystemdNetDevBond)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemdNetDevNetDev) DeepCopyInto(out *SystemdNetDevNetDev) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemdNetDevNetDev.
func (in *SystemdNetDevNetDev) DeepCopy() *SystemdNetDevNetDev {
	if in == nil {
		return nil
	}
	out := new(SystemdNetDevNetDev)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemdNetDevSpec) DeepCopyInto(out *SystemdNetDevSpec) {
	*out = *in
	if in.NetDev != nil {
		in, out := &in.NetDev, &out.NetDev
		if *in == nil {
			*out = nil
		} else {
			*out = new(SystemdNetDevNetDev)
			**out = **in
		}
	}
	if in.Bond != nil {
		in, out := &in.Bond, &out.Bond
		if *in == nil {
			*out = nil
		} else {
			*out = new(SystemdNetDevBond)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemdNetDevSpec.
func (in *SystemdNetDevSpec) DeepCopy() *SystemdNetDevSpec {
	if in == nil {
		return nil
	}
	out := new(SystemdNetDevSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemdNetworkMatch) DeepCopyInto(out *SystemdNetworkMatch) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemdNetworkMatch.
func (in *SystemdNetworkMatch) DeepCopy() *SystemdNetworkMatch {
	if in == nil {
		return nil
	}
	out := new(SystemdNetworkMatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemdNetworkNetwork) DeepCopyInto(out *SystemdNetworkNetwork) {
	*out = *in
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemdNetworkNetwork.
func (in *SystemdNetworkNetwork) DeepCopy() *SystemdNetworkNetwork {
	if in == nil {
		return nil
	}
	out := new(SystemdNetworkNetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemdNetworkSpec) DeepCopyInto(out *SystemdNetworkSpec) {
	*out = *in
	if in.Match != nil {
		in, out := &in.Match, &out.Match
		if *in == nil {
			*out = nil
		} else {
			*out = new(SystemdNetworkMatch)
			**out = **in
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		if *in == nil {
			*out = nil
		} else {
			*out = new(SystemdNetworkNetwork)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemdNetworkSpec.
func (in *SystemdNetworkSpec) DeepCopy() *SystemdNetworkSpec {
	if in == nil {
		return nil
	}
	out := new(SystemdNetworkSpec)
	in.DeepCopyInto(out)
	return out
}

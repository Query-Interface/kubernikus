<%
CONFIG = {
  "AMERICAS" => {
    "MANUAL" => ["na-us-1"],
    "AUTO"   => ["la-br-1", "na-ca-1", "na-us-3"]
  },
  "ASIA" => {
    "MANUAL" => ["ap-au-1"],
    "AUTO"   => ["ap-ae-1", "ap-cn-1", "ap-jp-1", "ap-jp-2", "ap-sa-1"]
  },
  "EMEA" => {
    "MANUAL" => ["eu-de-1", "eu-de-2", "eu-nl-1"],
    "AUTO"   => ["eu-ru-1"]
  },
  "INFRA" => {
    "MANUAL" => [],
    "AUTO"   => ["qa-de-1"]
  }
}

  ASIA     = ["ap-ae-1", "ap-au-1", "ap-cn-1", "ap-jp-1", "ap-jp-2", "ap-sa-1"]
  EMEA     = ["eu-de-1", "eu-de-2", "eu-nl-1", "eu-ru-1", "la-br-1"]
  AMERICAS = ["na-ca-1", "na-us-1", "na-us-3"]
  INFRA    = ["qa-de-1"]
  INTERNAL = ["master"]

  ADMIN    = (ASIA + EMEA + AMERICAS + INFRA).map { |r| "k-#{r}" }
%>

<% INTERNAL.each do |region| %>
auth_<%= region %>: &auth_<%= region %>
  OS_AUTH_URL: https://identity-3.eu-nl-1.cloud.sap/v3
  OS_USERNAME: ((kubernikus-prod-username))
  OS_PASSWORD: ((kubernikus-prod-password))
  OS_USER_DOMAIN_NAME: ccadmin
  OS_PROJECT_NAME: kubernikus-<%= region %>
  OS_PROJECT_DOMAIN_NAME: ccadmin
  KUBERNIKUS_NAME: k-<%= region %>
  KUBERNIKUS_URL: https://k-<%= region %>.admin.cloud.sap
<% end %>

<% CONFIG.map { |_, group| group["MANUAL"] }.flatten.each do |region| %>
auth_<%= region %>: &auth_<%= region %>
  OS_AUTH_URL: https://identity-3.<%= region %>.cloud.sap/v3
  OS_USERNAME: ((kubernikus-prod-username))
  OS_PASSWORD: ((kubernikus-prod-password))
  OS_USER_DOMAIN_NAME: ccadmin
  OS_PROJECT_NAME: kubernikus
  OS_PROJECT_DOMAIN_NAME: ccadmin
  KUBERNIKUS_NAME: k-<%= region %>
  KUBERNIKUS_URL: https://k-<%= region %>.admin.cloud.sap

auth_e2e_<%= region %>: &auth_e2e_<%= region %>
  OS_AUTH_URL: https://identity-3.<%= region %>.cloud.sap/v3
  OS_USERNAME: ((kubernikus-prod-username))
  OS_PASSWORD: ((kubernikus-prod-password))
  OS_USER_DOMAIN_NAME: ccadmin
  OS_PROJECT_NAME: kubernikus-e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin
  KUBERNIKUS_NAME: e2e 
  KUBERNIKUS_URL: https://kubernikus.<%= region %>.cloud.sap
<% end %>

<% CONFIG.map { |_, group| group["AUTO"] }.flatten.each do |region| %>
auth_<%= region %>: &auth_<%= region %>
  OS_AUTH_URL: https://identity-3.<%= region %>.cloud.sap/v3
  OS_USERNAME: kubernikus-pipeline 
  OS_PASSWORD: ((kubernikus-pipeline-password))
  OS_USER_DOMAIN_NAME: Default 
  OS_PROJECT_NAME: kubernikus
  OS_PROJECT_DOMAIN_NAME: ccadmin
  KUBERNIKUS_NAME: k-<%= region %>
  KUBERNIKUS_URL: https://k-<%= region %>.admin.cloud.sap

auth_e2e_<%= region %>: &auth_e2e_<%= region %>
  OS_AUTH_URL: https://identity-3.<%= region %>.cloud.sap/v3
  OS_USERNAME: kubernikus-pipeline
  OS_PASSWORD: ((kubernikus-pipeline-password))
  OS_USER_DOMAIN_NAME: Default 
  OS_PROJECT_NAME: kubernikus_e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin
  KUBERNIKUS_NAME: e2e 
  KUBERNIKUS_URL: https://kubernikus.<%= region %>.cloud.sap
<% end %>

auth_e2e_eu-nl-1_master: &auth_e2e_eu-nl-1_master
  OS_AUTH_URL: https://identity-3.eu-nl-1.cloud.sap/v3
  OS_USERNAME: ((kubernikus-prod-username))
  OS_PASSWORD: ((kubernikus-prod-password))
  OS_USER_DOMAIN_NAME: ccadmin
  OS_PROJECT_NAME: kubernikus-e2e
  OS_PROJECT_DOMAIN_NAME: ccadmin
  KUBERNIKUS_NAME: e2e 
  KUBERNIKUS_URL: https://kubernikus-master.eu-nl-1.cloud.sap

<% Dir.glob(File.join(File.dirname(__FILE__), "task*.yaml")).map{|f| File.basename(f, ".yaml")}.each do |task| %>
<%= task %>: &<%= task%>
  <%= File.read(File.join(File.dirname(__FILE__), "#{task}.yaml")).gsub("\n", "\n  ") %>
<% end %>
  
slack: &slack
  on_success: { put: slack, params: {alert_type: fixed } }
  on_failure: { put: slack, params: {alert_type: broke } }
  on_abort:   { put: slack, params: {alert_type: broke } }

resources:

  - name: master.builds
    type: gh-status
    source:
      username: sapcc-bot
      password: ((github-com-access-token))
      owner:    sapcc
      repo:     kubernikus
      access_token: ((github-com-access-token))
      branch: master
      depth: 1

  - name: secrets.git
    type: git
    webhook_token: aldhjalkdhahdjkahdjkhjadhjadhkjadlkjhAAdd
    check_every: 1h
    source:
      uri:         git@github.wdf.sap.corp:cc/secrets.git
      private_key: ((secrets-ssh-key))
      branch:      master
      depth: 1

  - name: terraform.git
    type: git
    source:
      uri: https://github.com/sapcc/kubernikus.git
      branch: master
      depth: 1
      paths: [ terraform ]

  - name: helm-charts.git
    type: git
    source:
      uri:    https://github.com/sapcc/helm-charts.git
      branch: master
      paths:  [ openstack/kubernikus/ ]

  - name: slack
    type: slack-alert
    source:
      url: ((slack-webhook-url))
      channel: '#kubernikus-ci'

<% CONFIG.each do |group, regions| %>
  - name: <%= group %>.tag
    type: time-version-resource
    check_every: 525600h # basically never (only when triggered by a job)
<% end %>

  - name: rollout.tag
    type: time-version-resource
    check_every: 525600h # basically never (only when triggered by a job)


resource_types:
  - name: time-version
    type: docker-image
    source:
      repository: hub.global.cloud.sap/concourse/time-version-resource
      tag: v2
  - name: slack-alert
    type: docker-image
    source:
      repository: arbourd/concourse-slack-alert-resource
  - name: gh-status
    type: docker-image
    source:
      repository: hub.global.cloud.sap/concourse/ghstatus-resource
      tag: latest
  - name: time-version-resource
    type: docker-image
    source:
      repository: hub.global.cloud.sap/concourse/time-version-resource
      tag: v2

jobs:
  - name: master 
    serial: true
    plan:
      - aggregate:
        - get: secrets.git
        - get: kubernikus.builds
          resource: master.builds
          trigger: true
      - aggregate:
        - task: kubernikus 
          config:
            <<: *task_helm_kubernikus
          params:
            <<: *auth_master
        - task: kubernikus-system 
          config:
            <<: *task_helm_kubernikus-system
          params:
            <<: *auth_master
    <<: *slack

  - name: e2e
    serial: true
    plan:
      - aggregate:
        - get: secrets.git
        - get: kubernikus.builds
          resource: master.builds
          passed: [master]
          trigger: true
      - task: e2e_tests
        config:
          <<: *task_e2e_tests
        timeout: 2h
        params:
          <<: *auth_e2e_eu-nl-1_master
    <<: *slack

  - name: prod 
    serial: true
    plan:
      - get: kubernikus.builds
        resource: master.builds
        passed: [e2e]

  - name: admin 
    serial: true
    plan:
      - aggregate:
        - get: secrets.git
        - get: kubernikus.builds
          resource: master.builds
          passed: [prod]
          trigger: true
      - aggregate:
<% (ASIA + EMEA + AMERICAS + INTERNAL).each do |region| %>
        - task: k-<%= region %>
          config:
            <<: *task_helm-admin_kubernikus
          params:
            REGION: admin
            KUBERNIKUS_NAME: k-<%= region %>
            GITHUB_TOKEN: ((github-access-token))
<% end %>
    <<: *slack

  - name: rollout 
    serial: true
    plan:
      - get: secrets.git
      - get: helm-charts.git
        trigger: true
      - get: terraform.git
        trigger: true
      - get: kubernikus.builds
        resource: master.builds
        passed: [admin]
        trigger: true
      - put: rollout.tag

<% CONFIG.each do |group, regions| %>

  - name: <%= group %> 
    serial: true
    plan:
      - get: rollout.tag
        passed: [rollout]
        trigger: true
      - get: helm-charts.git
        passed: [rollout]
      - get: terraform.git
        passed: [rollout]
      - get: secrets.git
        passed: [rollout]
      - get: kubernikus.builds
        resource: master.builds
        passed: [rollout]
      - put: <%= group %>.tag

<% (regions["AUTO"] + regions["MANUAL"]).each do |region| %>
  - name: seed_<%= region %>
    serial: true
    plan:
      - get: helm-charts.git
        passed: [<%= group %>]
      - get: secrets.git
        passed: [<%= group %>]
      - get: terraform.git
        passed: [<%= group %>]
      - get: <%= group %>.tag
        passed: [<%= group %>]
        trigger: true
      - get: kubernikus.builds
        resource: master.builds
        passed: [<%= group %>]
      - task: seed
        config: 
          <<: *task_helm_seed
        input_mapping: 
          charts.git: helm-charts.git
        params:
          REGION:       <%= region %>
          GITHUB_TOKEN: ((github-access-token))
    <<: *slack

<% if regions["AUTO"].include?(region) %>
  - name: terraform_<%= region %>
    serial: true
    plan:
      - get: <%= group %>.tag
        trigger: true
        passed: [seed_<%= region %>]
      - get: helm-charts.git
        passed: [seed_<%= region %>]
      - get: secrets.git
        passed: [seed_<%= region %>]
      - get: terraform.git 
        passed: [seed_<%= region %>]
      - get: kubernikus.builds
        resource: master.builds
        passed: [seed_<%= region %>]
      - task: terraform
        config: 
          <<: *task_terraform
        timeout: 45m
        attempts: 5
        params:
          TF_REGION: <%= region %>
          TF_PASSWORD: ((kubernikus-terraform-password))
    <<: *slack
<% else %>
  - name: terraform_<%= region %>
    serial: true
    plan:
      - get: <%= group %>.tag
        trigger: true
        passed: [seed_<%= region %>]
      - get: helm-charts.git
        passed: [seed_<%= region %>]
      - get: secrets.git
        passed: [seed_<%= region %>]
      - get: terraform.git 
        passed: [seed_<%= region %>]
      - get: kubernikus.builds
        resource: master.builds
        passed: [seed_<%= region %>]
    <<: *slack
<% end %>

  - name: tiller_<%= region %>
    plan:
      - get: <%= group %>.tag
        trigger: true
        passed: [terraform_<%= region %>]
      - get: helm-charts.git
        passed: [terraform_<%= region %>]
      - get: secrets.git
        passed: [terraform_<%= region %>]
      - get: kubernikus.builds
        resource: master.builds
        passed: [terraform_<%= region %>]
      - get: terraform.git 
        passed: [terraform_<%= region %>]
      - aggregate:
        - task: k-<%= region %>
          config: 
            <<: *task_tiller
          timeout: 10m
          params:
            <<: *auth_<%= region %>
    <<: *slack

  - name: deploy_<%= region %>
    serial: true
    plan:
      - aggregate:
        - get: <%= group %>.tag
          trigger: true
          passed: [tiller_<%= region %>]
        - get: secrets.git
          passed: [tiller_<%= region %>]
        - get: helm-charts.git
          passed: [tiller_<%= region %>]
        - get: kubernikus.builds
          resource: master.builds
          passed: [tiller_<%= region %>]
        - get: terraform.git 
          passed: [tiller_<%= region %>]
      - aggregate:
        - task: kubernikus_<%= region %>
          config: 
            <<: *task_helm_kubernikus
          params:
            <<: *auth_<%= region %>
        - task: kubernikus-system_<%= region %>
          config: 
            <<: *task_helm_kubernikus-system
          params:
            <<: *auth_<%= region %>
    <<: *slack

  - name: soak_<%= region %>
    serial: true
    build_logs_to_retain: 168
    plan:
      - aggregate:
        - get: <%= group %>.tag
          trigger: true
          passed: [deploy_<%= region %>]
        - get: secrets.git
          passed: [deploy_<%= region %>]
        - get: kubernikus.builds
          resource: master.builds
          passed: [deploy_<%= region %>]
        - get: terraform.git 
          passed: [deploy_<%= region %>]
        - get: helm-charts.git
          passed: [deploy_<%= region %>]
      - task: e2e_tests
        config: 
          <<: *task_e2e_tests
        timeout: 45m
        params:
          <<: *auth_e2e_<%= region %>
    <<: *slack

<% end %>
<% end %>

groups:
  - name: deploy
    jobs:
      - master
      - e2e 
      - prod
      - rollout
      - admin
<% CONFIG.each do |group, regions| %>
      - <%= group %>
<% end %>

<% CONFIG.each do |group, regions| %>
  - name: <%= group %> 
    jobs:
<% (regions["AUTO"] + regions["MANUAL"]).each do |region| %>
      - seed_<%= region %>
      - terraform_<%= region %>
      - tiller_<%= region %>
      - deploy_<%= region %>
      - soak_<%= region %>
<% end %>
<% end %>

  - name: WORLD 
    jobs:
      - master
      - e2e 
      - prod
      - admin
      - rollout
<% CONFIG.each do |group, regions| %>
      - <%= group %>
<% end %>
<% CONFIG.each do |group, regions| %>
<% (regions["AUTO"] + regions["MANUAL"]).each do |region| %>
      - seed_<%= region %>
      - terraform_<%= region %>
      - tiller_<%= region %>
      - deploy_<%= region %>
      - soak_<%= region %>
<% end %>
<% end %> 
